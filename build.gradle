buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'idea'

jar {
    baseName = 'shang'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    mybatisGenerator
}

// 读取文件夹中对应的配置文件
ext{
    def prop = new Properties();
    file("src/main/resources/mybatis/jdbc-mysql.properties")
            .withInputStream {
        prop.load(it)
    }
    file("src/main/resources/mybatis/gradle.properties")
            .withInputStream {
        prop.load(it)
    }
    prop.each {
        project.extensions.add("$it.key",it.value);
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1")
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')

    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
	mybatisGenerator 'mysql:mysql-connector-java:5.1.39'

}

// 利用ant创建一个自动生成MyBatis目录文件的task
task mybatisGenerate << {
    ant.properties['targetProject'] = projectDir.path
    ant.properties['jarDirection'] = project['jdbc.jarDirection']
    ant.properties['driverClass'] = project['jdbc.driverClassName']
    ant.properties['connectionURL'] = project['jdbc.url']
    ant.properties['userId'] = project['jdbc.user']
    ant.properties['password'] = project['jdbc.password']
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = project['modelPackage']
    ant.properties['mapperPackage'] = project['mapperPackage']
    ant.properties['sqlMapperPackage'] = project['sqlMapperPackage']

    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )

    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/mybatis/generatorConfig.xml',
            verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'jarDirection')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}